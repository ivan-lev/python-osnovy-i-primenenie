dict = {'global': 'none'}
'''
    create <namespace> <parent> –  создать новое пространство имен с именем <namespace> внутри пространства <parent>
    add <namespace> <var> – добавить в пространство <namespace> переменную <var>
    get <namespace> <var> – получить имя пространства, из которого будет взята переменная <var> при запросе из пространства <namespace>, или None, если такого пространства не существует
'''

for i in range(int(input())):
    a = input().split()
    if a[0] == 'create':        # создать новое пространство имен внутри пространства
        if a[1] not in dict:    # если пространства нет в словаре,
            dict[a[1]] = a[2]   # оно там создаётся и родительское пространство записывается в значения

    elif a[0] == 'add':         # добавить в пространство переменную
        temp = dict.get(a[1])   # берем значение по ключу(имени пространства)
        temp += ' '             # добавляем запятую и
        temp += a[2]            # дописываем переменную
        dict[a[1]] = temp       # записываем всё обратно в словарь

    elif a[0] == 'get': # получить имя пространства из которого будет взята переменная
        result = 'None'
        space = 'local'
        while space == 'local': # делаем цикл, пока не дойдём до глобал
            temp = dict.get(a[1]).split() # берём значение из словаря по имени пространства и делаем из него список
            for i in range(1, len(temp)): # проходимся по списку в поиске соответствия нужной переменной
                if temp[i] == a[2]: # если находим её, то меняем значение переменной result
                    result = a[1]
            if result == 'None': # если не находим результат
                if temp[0] == 'global': # проверяем, вдруг мы уже в пространстве global
                    space = 'global'    # тогда прекращаем поиски
            a[1] = temp[0]  # то меняем пространство на родительское, которое прописано в temp[0]
            print('Новое пространство:', temp[0])
            print('Новая комманда такая:', a)

        print(result) # печатаем название найденного пространства имён или оно остаётся None
        # искать переменную в пространстве,
        # если её там нет, то искать в родительском пространстве
        # и т.д до global

print(dict)
